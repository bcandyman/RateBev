axios

[0] IncomingMessage {
[0]   _readableState: ReadableState {
[0]     objectMode: false,
[0]     highWaterMark: 16384,
[0]     buffer: BufferList { head: null, tail: null, length: 0 },
[0]     length: 0,
[0]     pipes: null,
[0]     pipesCount: 0,
[0]     flowing: null,
[0]     ended: false,
[0]     endEmitted: false,
[0]     reading: false,
[0]     sync: true,
[0]     needReadable: false,
[0]     emittedReadable: false,
[0]     readableListening: false,
[0]     resumeScheduled: false,
[0]     paused: true,
[0]     emitClose: true,
[0]     autoDestroy: false,
[0]     destroyed: false,
[0]     defaultEncoding: 'utf8',
[0]     awaitDrain: 0,
[0]     readingMore: true,
[0]     decoder: null,
[0]     encoding: null
[0]   },
[0]   readable: true,
[0]   _events: [Object: null prototype] {
[0]     end: [Function: resetHeadersTimeoutOnReqEnd]
[0]   },
[0]   _eventsCount: 1,
[0]   _maxListeners: undefined,
[0]   socket: Socket {
[0]     connecting: false,
[0]     _hadError: false,
[0]     _parent: null,
[0]     _host: null,
[0]     _readableState: ReadableState {
[0]       objectMode: false,
[0]       highWaterMark: 16384,
[0]       buffer: BufferList { head: null, tail: null, length: 0 },
[0]       length: 0,
[0]       pipes: null,
[0]       pipesCount: 0,
[0]       flowing: true,
[0]       ended: false,
[0]       endEmitted: false,
[0]       reading: true,
[0]       sync: false,
[0]       needReadable: true,
[0]       emittedReadable: false,
[0]       readableListening: false,
[0]       resumeScheduled: false,
[0]       paused: false,
[0]       emitClose: false,
[0]       autoDestroy: false,
[0]       destroyed: false,
[0]       defaultEncoding: 'utf8',
[0]       awaitDrain: 0,
[0]       readingMore: false,
[0]       decoder: null,
[0]       encoding: null
[0]     },
[0]     readable: true,
[0]     _events: [Object: null prototype] {
[0]       end: [Array],
[0]       timeout: [Function: socketOnTimeout],
[0]       data: [Function: bound socketOnData],
[0]       error: [Function: socketOnError],
[0]       close: [Array],
[0]       drain: [Function: bound socketOnDrain],
[0]       resume: [Function: onSocketResume],
[0]       pause: [Function: onSocketPause]
[0]     },
[0]     _eventsCount: 8,
[0]     _maxListeners: undefined,
[0]     _writableState: WritableState {
[0]       objectMode: false,
[0]       highWaterMark: 16384,
[0]       finalCalled: false,
[0]       needDrain: false,
[0]       ending: false,
[0]       ended: false,
[0]       finished: false,
[0]       destroyed: false,
[0]       decodeStrings: false,
[0]       defaultEncoding: 'utf8',
[0]       length: 0,
[0]       writing: false,
[0]       corked: 0,
[0]       sync: true,
[0]       bufferProcessing: false,
[0]       onwrite: [Function: bound onwrite],
[0]       writecb: null,
[0]       writelen: 0,
[0]       bufferedRequest: null,
[0]       lastBufferedRequest: null,
[0]       pendingcb: 0,
[0]       prefinished: false,
[0]       errorEmitted: false,
[0]       emitClose: false,
[0]       autoDestroy: false,
[0]       bufferedRequestCount: 0,
[0]       corkedRequestsFree: [Object]
[0]     },
[0]     writable: true,
[0]     allowHalfOpen: true,
[0]     _sockname: null,
[0]     _pendingData: null,
[0]     _pendingEncoding: '',
[0]     server: Server {
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 2,
[0]       _maxListeners: undefined,
[0]       _connections: 1,
[0]       _handle: [TCP],
[0]       _usingWorkers: false,
[0]       _workers: [],
[0]       _unref: false,
[0]       allowHalfOpen: true,
[0]       pauseOnConnect: false,
[0]       httpAllowHalfOpen: false,
[0]       timeout: 120000,
[0]       keepAliveTimeout: 5000,
[0]       maxHeadersCount: null,
[0]       headersTimeout: 40000,
[0]       _connectionKey: '6::::3001',
[0]       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
[0]       [Symbol(ServerResponse)]: [Function: ServerResponse],
[0]       [Symbol(asyncId)]: 5
[0]     },
[0]     _server: Server {
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 2,
[0]       _maxListeners: undefined,
[0]       _connections: 1,
[0]       _handle: [TCP],
[0]       _usingWorkers: false,
[0]       _workers: [],
[0]       _unref: false,
[0]       allowHalfOpen: true,
[0]       pauseOnConnect: false,
[0]       httpAllowHalfOpen: false,
[0]       timeout: 120000,
[0]       keepAliveTimeout: 5000,
[0]       maxHeadersCount: null,
[0]       headersTimeout: 40000,
[0]       _connectionKey: '6::::3001',
[0]       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
[0]       [Symbol(ServerResponse)]: [Function: ServerResponse],
[0]       [Symbol(asyncId)]: 5
[0]     },
[0]     timeout: 120000,
[0]     parser: HTTPParser {
[0]       '0': [Function: parserOnHeaders],
[0]       '1': [Function: parserOnHeadersComplete],
[0]       '2': [Function: parserOnBody],
[0]       '3': [Function: parserOnMessageComplete],
[0]       '4': [Function: bound onParserExecute],
[0]       _headers: [],
[0]       _url: '',
[0]       socket: [Circular],
[0]       incoming: [Circular],
[0]       outgoing: null,
[0]       maxHeaderPairs: 2000,
[0]       _consumed: true,
[0]       onIncoming: [Function: bound parserOnIncoming],
[0]       parsingHeadersStart: 0
[0]     },
[0]     on: [Function: socketListenerWrap],
[0]     addListener: [Function: socketListenerWrap],
[0]     prependListener: [Function: socketListenerWrap],
[0]     _paused: false,
[0]     _httpMessage: ServerResponse {
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 1,
[0]       _maxListeners: undefined,
[0]       outputData: [],
[0]       outputSize: 0,
[0]       writable: true,
[0]       _last: false,
[0]       chunkedEncoding: false,
[0]       shouldKeepAlive: false,
[0]       useChunkedEncodingByDefault: true,
[0]       sendDate: true,
[0]       _removedConnection: false,
[0]       _removedContLen: false,
[0]       _removedTE: false,
[0]       _contentLength: null,
[0]       _hasBody: true,
[0]       _trailer: '',
[0]       finished: false,
[0]       _headerSent: false,
[0]       socket: [Circular],
[0]       connection: [Circular],
[0]       _header: null,
[0]       _onPendingData: [Function: bound updateOutgoingData],
[0]       _sent100: false,
[0]       _expect_continue: false,
[0]       req: [Circular],
[0]       locals: [Object: null prototype] {},
[0]       [Symbol(kNeedDrain)]: false,
[0]       [Symbol(isCorked)]: false,
[0]       [Symbol(kOutHeaders)]: [Object: null prototype]
[0]     },
[0]     [Symbol(asyncId)]: 47,
[0]     [Symbol(kHandle)]: TCP {
[0]       reading: true,
[0]       onconnection: null,
[0]       _consumed: true,
[0]       [Symbol(owner)]: [Circular]
[0]     },
[0]     [Symbol(lastWriteQueueSize)]: 0,
[0]     [Symbol(timeout)]: Timeout {
[0]       _idleTimeout: 120000,
[0]       _idlePrev: [TimersList],
[0]       _idleNext: [TimersList],
[0]       _idleStart: 3214,
[0]       _onTimeout: [Function: bound ],
[0]       _timerArgs: undefined,
[0]       _repeat: null,
[0]       _destroyed: false,
[0]       [Symbol(refed)]: false,
[0]       [Symbol(asyncId)]: 48,
[0]       [Symbol(triggerId)]: 47
[0]     },
[0]     [Symbol(kBuffer)]: null,
[0]     [Symbol(kBufferCb)]: null,
[0]     [Symbol(kBufferGen)]: null,
[0]     [Symbol(kBytesRead)]: 0,
[0]     [Symbol(kBytesWritten)]: 0
[0]   },
[0]   connection: Socket {
[0]     connecting: false,
[0]     _hadError: false,
[0]     _parent: null,
[0]     _host: null,
[0]     _readableState: ReadableState {
[0]       objectMode: false,
[0]       highWaterMark: 16384,
[0]       buffer: BufferList { head: null, tail: null, length: 0 },
[0]       length: 0,
[0]       pipes: null,
[0]       pipesCount: 0,
[0]       flowing: true,
[0]       ended: false,
[0]       endEmitted: false,
[0]       reading: true,
[0]       sync: false,
[0]       needReadable: true,
[0]       emittedReadable: false,
[0]       readableListening: false,
[0]       resumeScheduled: false,
[0]       paused: false,
[0]       emitClose: false,
[0]       autoDestroy: false,
[0]       destroyed: false,
[0]       defaultEncoding: 'utf8',
[0]       awaitDrain: 0,
[0]       readingMore: false,
[0]       decoder: null,
[0]       encoding: null
[0]     },
[0]     readable: true,
[0]     _events: [Object: null prototype] {
[0]       end: [Array],
[0]       timeout: [Function: socketOnTimeout],
[0]       data: [Function: bound socketOnData],
[0]       error: [Function: socketOnError],
[0]       close: [Array],
[0]       drain: [Function: bound socketOnDrain],
[0]       resume: [Function: onSocketResume],
[0]       pause: [Function: onSocketPause]
[0]     },
[0]     _eventsCount: 8,
[0]     _maxListeners: undefined,
[0]     _writableState: WritableState {
[0]       objectMode: false,
[0]       highWaterMark: 16384,
[0]       finalCalled: false,
[0]       needDrain: false,
[0]       ending: false,
[0]       ended: false,
[0]       finished: false,
[0]       destroyed: false,
[0]       decodeStrings: false,
[0]       defaultEncoding: 'utf8',
[0]       length: 0,
[0]       writing: false,
[0]       corked: 0,
[0]       sync: true,
[0]       bufferProcessing: false,
[0]       onwrite: [Function: bound onwrite],
[0]       writecb: null,
[0]       writelen: 0,
[0]       bufferedRequest: null,
[0]       lastBufferedRequest: null,
[0]       pendingcb: 0,
[0]       prefinished: false,
[0]       errorEmitted: false,
[0]       emitClose: false,
      autoDestroy: false,
[0]       bufferedRequestCount: 0,
[0]       corkedRequestsFree: [Object]
[0]     },
[0]     writable: true,
[0]     allowHalfOpen: true,
[0]     _sockname: null,
[0]     _pendingData: null,
[0]     _pendingEncoding: '',
[0]     server: Server {
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 2,
[0]       _maxListeners: undefined,
[0]       _connections: 1,
[0]       _handle: [TCP],
[0]       _usingWorkers: false,
[0]       _workers: [],
[0]       _unref: false,
[0]       allowHalfOpen: true,
[0]       pauseOnConnect: false,
[0]       httpAllowHalfOpen: false,
[0]       timeout: 120000,
[0]       keepAliveTimeout: 5000,
[0]       maxHeadersCount: null,
[0]       headersTimeout: 40000,
[0]       _connectionKey: '6::::3001',
[0]       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
[0]       [Symbol(ServerResponse)]: [Function: ServerResponse],
[0]       [Symbol(asyncId)]: 5
[0]     },
[0]     _server: Server {
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 2,
[0]       _maxListeners: undefined,
[0]       _connections: 1,
[0]       _handle: [TCP],
[0]       _usingWorkers: false,
[0]       _workers: [],
[0]       _unref: false,
[0]       allowHalfOpen: true,
[0]       pauseOnConnect: false,
[0]       httpAllowHalfOpen: false,
[0]       timeout: 120000,
[0]       keepAliveTimeout: 5000,
[0]       maxHeadersCount: null,
[0]       headersTimeout: 40000,
[0]       _connectionKey: '6::::3001',
[0]       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
[0]       [Symbol(ServerResponse)]: [Function: ServerResponse],
[0]       [Symbol(asyncId)]: 5
[0]     },
[0]     timeout: 120000,
[0]     parser: HTTPParser {
[0]       '0': [Function: parserOnHeaders],
[0]       '1': [Function: parserOnHeadersComplete],
[0]       '2': [Function: parserOnBody],
[0]       '3': [Function: parserOnMessageComplete],
[0]       '4': [Function: bound onParserExecute],
[0]       _headers: [],
[0]       _url: '',
[0]       socket: [Circular],
[0]       incoming: [Circular],
[0]       outgoing: null,
[0]       maxHeaderPairs: 2000,
[0]       _consumed: true,
[0]       onIncoming: [Function: bound parserOnIncoming],
[0]       parsingHeadersStart: 0
[0]     },
[0]     on: [Function: socketListenerWrap],
[0]     addListener: [Function: socketListenerWrap],
[0]     prependListener: [Function: socketListenerWrap],
[0]     _paused: false,
[0]     _httpMessage: ServerResponse {
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 1,
[0]       _maxListeners: undefined,
[0]       outputData: [],
[0]       outputSize: 0,
[0]       writable: true,
[0]       _last: false,
[0]       chunkedEncoding: false,
[0]       shouldKeepAlive: false,
[0]       useChunkedEncodingByDefault: true,
[0]       sendDate: true,
[0]       _removedConnection: false,
[0]       _removedContLen: false,
[0]       _removedTE: false,
[0]       _contentLength: null,
[0]       _hasBody: true,
[0]       _trailer: '',
[0]       finished: false,
[0]       _headerSent: false,
[0]       socket: [Circular],
[0]       connection: [Circular],
[0]       _header: null,
[0]       _onPendingData: [Function: bound updateOutgoingData],
[0]       _sent100: false,
[0]       _expect_continue: false,
[0]       req: [Circular],
[0]       locals: [Object: null prototype] {},
[0]       [Symbol(kNeedDrain)]: false,
[0]       [Symbol(isCorked)]: false,
[0]       [Symbol(kOutHeaders)]: [Object: null prototype]
[0]     },
[0]     [Symbol(asyncId)]: 47,
[0]     [Symbol(kHandle)]: TCP {
[0]       reading: true,
[0]       onconnection: null,
[0]       _consumed: true,
[0]       [Symbol(owner)]: [Circular]
[0]     },
[0]     [Symbol(lastWriteQueueSize)]: 0,
[0]     [Symbol(timeout)]: Timeout {
[0]       _idleTimeout: 120000,
[0]       _idlePrev: [TimersList],
[0]       _idleNext: [TimersList],
[0]       _idleStart: 3214,
[0]       _onTimeout: [Function: bound ],
[0]       _timerArgs: undefined,
[0]       _repeat: null,
[0]       _destroyed: false,
[0]       [Symbol(refed)]: false,
[0]       [Symbol(asyncId)]: 48,
[0]       [Symbol(triggerId)]: 47
[0]     },
[0]     [Symbol(kBuffer)]: null,
[0]     [Symbol(kBufferCb)]: null,
[0]     [Symbol(kBufferGen)]: null,
[0]     [Symbol(kBytesRead)]: 0,
[0]     [Symbol(kBytesWritten)]: 0
[0]   },
[0]   httpVersionMajor: 1,
[0]   httpVersionMinor: 1,
[0]   httpVersion: '1.1',
[0]   complete: false,
[0]   headers: {
[0]     'x-forwarded-host': 'localhost:3000',
[0]     'x-forwarded-proto': 'http',
[0]     'x-forwarded-port': '3000',
[0]     'x-forwarded-for': '127.0.0.1',
[0]     cookie: 'x-auth-token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNiZjg5ZTY3LTFjYjYtNDg3Ni04ZTdmLWQxZmRjZmNmZDliZSIsIm5hbWUiOiJCZW5qYW1pbiIsImlhdCI6MTYxNTY5NzM5NX0.HwwrG2L7BZ88Bu_8WO5sZbUhNUHL9vN7fxCvIDEYkv4',
[0]     'accept-language': 'en-US,en;q=0.9',
[0]     'accept-encoding': 'gzip, deflate, br',
[0]     referer: 'http://localhost:3000/ratings',
[0]     'sec-fetch-dest': 'empty',
[0]     'sec-fetch-mode': 'cors',
[0]     'sec-fetch-site': 'same-origin',
[0]     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36',
[0]     'sec-ch-ua-mobile': '?0',
[0]     accept: 'application/json, text/plain, */*',
[0]     'sec-ch-ua': '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
[0]     connection: 'close',
[0]     host: 'localhost:3001'
[0]   },
[0]   rawHeaders: [
[0]     'x-forwarded-host',
[0]     'localhost:3000',
[0]     'x-forwarded-proto',
[0]     'http',
[0]     'x-forwarded-port',
[0]     '3000',
[0]     'x-forwarded-for',
[0]     '127.0.0.1',
[0]     'cookie',
[0]     'x-auth-token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNiZjg5ZTY3LTFjYjYtNDg3Ni04ZTdmLWQxZmRjZmNmZDliZSIsIm5hbWUiOiJCZW5qYW1pbiIsImlhdCI6MTYxNTY5NzM5NX0.HwwrG2L7BZ88Bu_8WO5sZbUhNUHL9vN7fxCvIDEYkv4',
[0]     'accept-language',
[0]     'en-US,en;q=0.9',
[0]     'accept-encoding',
[0]     'gzip, deflate, br',
[0]     'referer',
[0]     'http://localhost:3000/ratings',
[0]     'sec-fetch-dest',
[0]     'empty',
[0]     'sec-fetch-mode',
[0]     'cors',
[0]     'sec-fetch-site',
[0]     'same-origin',
[0]     'user-agent',
[0]     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.82 Safari/537.36',
[0]     'sec-ch-ua-mobile',
[0]     '?0',
[0]     'accept',
[0]     'application/json, text/plain, */*',
[0]     'sec-ch-ua',
[0]     '"Google Chrome";v="89", "Chromium";v="89", ";Not A Brand";v="99"',
[0]     'connection',
[0]     'close',
[0]     'host',
[0]     'localhost:3001'
[0]   ],
[0]   trailers: {},
[0]   rawTrailers: [],
[0]   aborted: false,
[0]   upgrade: false,
[0]   url: '/all',
[0]   method: 'GET',
[0]   statusCode: null,
[0]   statusMessage: null,
[0]   client: Socket {
[0]     connecting: false,
[0]     _hadError: false,
[0]     _parent: null,
[0]     _host: null,
[0]     _readableState: ReadableState {
[0]       objectMode: false,
[0]       highWaterMark: 16384,
[0]       buffer: BufferList { head: null, tail: null, length: 0 },
[0]       length: 0,
[0]       pipes: null,
[0]       pipesCount: 0,
[0]       flowing: true,
[0]       ended: false,
[0]       endEmitted: false,
[0]       reading: true,
[0]       sync: false,
[0]       needReadable: true,
[0]       emittedReadable: false,
[0]       readableListening: false,
[0]       resumeScheduled: false,
[0]       paused: false,
[0]       emitClose: false,
[0]       autoDestroy: false,
[0]       destroyed: false,
[0]       defaultEncoding: 'utf8',
[0]       awaitDrain: 0,
[0]       readingMore: false,
[0]       decoder: null,
[0]       encoding: null
[0]     },
[0]     readable: true,
[0]     _events: [Object: null prototype] {
[0]       end: [Array],
[0]       timeout: [Function: socketOnTimeout],
[0]       data: [Function: bound socketOnData],
[0]       error: [Function: socketOnError],
[0]       close: [Array],
[0]       drain: [Function: bound socketOnDrain],
[0]       resume: [Function: onSocketResume],
[0]       pause: [Function: onSocketPause]
[0]     },
[0]     _eventsCount: 8,
[0]     _maxListeners: undefined,
[0]     _writableState: WritableState {
[0]       objectMode: false,
[0]       highWaterMark: 16384,
[0]       finalCalled: false,
[0]       needDrain: false,
[0]       ending: false,
[0]       ended: false,
[0]       finished: false,
[0]       destroyed: false,
[0]       decodeStrings: false,
[0]       defaultEncoding: 'utf8',
[0]       length: 0,
[0]       writing: false,
[0]       corked: 0,
[0]       sync: true,
[0]       bufferProcessing: false,
[0]       onwrite: [Function: bound onwrite],
[0]       writecb: null,
[0]       writelen: 0,
[0]       bufferedRequest: null,
[0]       lastBufferedRequest: null,
[0]       pendingcb: 0,
[0]       prefinished: false,
[0]       errorEmitted: false,
[0]       emitClose: false,
[0]       autoDestroy: false,
[0]       bufferedRequestCount: 0,
[0]       corkedRequestsFree: [Object]
[0]     },
[0]     writable: true,
[0]     allowHalfOpen: true,
[0]     _sockname: null,
[0]     _pendingData: null,
[0]     _pendingEncoding: '',
[0]     server: Server {
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 2,
[0]       _maxListeners: undefined,
[0]       _connections: 1,
      _handle: [TCP],ReferenceError: json is not defined
[0]     at module.exports (/Users/bencandy/Documents/Web_Dev/RateBev/routes/middleware/auth.js:20:7)
[0]     at Layer.handle [as handle_request] (/Users/bencandy/Documents/Web_Dev/RateBev/node_modules/express/lib/router/layer.js:95:5)
[0]     at next (/Users/bencandy/Documents/Web_Dev/RateBev/node_modules/express/lib/router/route.js:137:13)
[0]     at Route.dispatch (/Users/bencandy/Documents/Web_Dev/RateBev/node_modules/express/lib/router/route.js:112:3)
[0]     at Layer.handle [as handle_request] (/Users/bencandy/Documents/Web_Dev/RateBev/node_modules/express/lib/router/layer.js:95:5)
[0]     at /Users/bencandy/Documents/Web_Dev/RateBev/node_modules/express/lib/router/index.js:281:22
[0]     at Function.process_params (/Users/bencandy/Documents/Web_Dev/RateBev/node_modules/express/lib/router/index.js:335:12)
[0]     at next (/Users/bencandy/Documents/Web_Dev/RateBev/node_modules/express/lib/router/index.js:275:10)
[0]     at Function.handle (/Users/bencandy/Documents/Web_Dev/RateBev/node_modules/express/lib/router/index.js:174:3)
[0]     at router (/Users/bencandy/Documents/Web_Dev/RateBev/node_modules/express/lib/router/index.js:47:12)
[0] 
[0]       _usingWorkers: false,
[0]       _workers: [],
[0]       _unref: false,
[0]       allowHalfOpen: true,
[0]       pauseOnConnect: false,
[0]       httpAllowHalfOpen: false,
[0]       timeout: 120000,
[0]       keepAliveTimeout: 5000,
[0]       maxHeadersCount: null,
[0]       headersTimeout: 40000,
[0]       _connectionKey: '6::::3001',
[0]       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
[0]       [Symbol(ServerResponse)]: [Function: ServerResponse],
[0]       [Symbol(asyncId)]: 5
[0]     },
[0]     _server: Server {
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 2,
[0]       _maxListeners: undefined,
[0]       _connections: 1,
[0]       _handle: [TCP],
[0]       _usingWorkers: false,
[0]       _workers: [],
[0]       _unref: false,
[0]       allowHalfOpen: true,
[0]       pauseOnConnect: false,
[0]       httpAllowHalfOpen: false,
[0]       timeout: 120000,
[0]       keepAliveTimeout: 5000,
[0]       maxHeadersCount: null,
[0]       headersTimeout: 40000,
[0]       _connectionKey: '6::::3001',
[0]       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
[0]       [Symbol(ServerResponse)]: [Function: ServerResponse],
[0]       [Symbol(asyncId)]: 5
[0]     },
[0]     timeout: 120000,
[0]     parser: HTTPParser {
[0]       '0': [Function: parserOnHeaders],
[0]       '1': [Function: parserOnHeadersComplete],
[0]       '2': [Function: parserOnBody],
[0]       '3': [Function: parserOnMessageComplete],
[0]       '4': [Function: bound onParserExecute],
[0]       _headers: [],
[0]       _url: '',
[0]       socket: [Circular],
[0]       incoming: [Circular],
[0]       outgoing: null,
[0]       maxHeaderPairs: 2000,
[0]       _consumed: true,
[0]       onIncoming: [Function: bound parserOnIncoming],
[0]       parsingHeadersStart: 0
[0]     },
[0]     on: [Function: socketListenerWrap],
[0]     addListener: [Function: socketListenerWrap],
[0]     prependListener: [Function: socketListenerWrap],
[0]     _paused: false,
[0]     _httpMessage: ServerResponse {
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 1,
[0]       _maxListeners: undefined,
[0]       outputData: [],
[0]       outputSize: 0,
[0]       writable: true,
[0]       _last: false,
[0]       chunkedEncoding: false,
[0]       shouldKeepAlive: false,
[0]       useChunkedEncodingByDefault: true,
[0]       sendDate: true,
[0]       _removedConnection: false,
[0]       _removedContLen: false,
[0]       _removedTE: false,
[0]       _contentLength: null,
[0]       _hasBody: true,
[0]       _trailer: '',
[0]       finished: false,
[0]       _headerSent: false,
[0]       socket: [Circular],
[0]       connection: [Circular],
[0]       _header: null,
[0]       _onPendingData: [Function: bound updateOutgoingData],
[0]       _sent100: false,
[0]       _expect_continue: false,
[0]       req: [Circular],
[0]       locals: [Object: null prototype] {},
[0]       [Symbol(kNeedDrain)]: false,
[0]       [Symbol(isCorked)]: false,
[0]       [Symbol(kOutHeaders)]: [Object: null prototype]
[0]     },
[0]     [Symbol(asyncId)]: 47,
[0]     [Symbol(kHandle)]: TCP {
[0]       reading: true,
[0]       onconnection: null,
[0]       _consumed: true,
[0]       [Symbol(owner)]: [Circular]
[0]     },
[0]     [Symbol(lastWriteQueueSize)]: 0,
[0]     [Symbol(timeout)]: Timeout {
[0]       _idleTimeout: 120000,
[0]       _idlePrev: [TimersList],
[0]       _idleNext: [TimersList],
[0]       _idleStart: 3214,
[0]       _onTimeout: [Function: bound ],
[0]       _timerArgs: undefined,
[0]       _repeat: null,
[0]       _destroyed: false,
[0]       [Symbol(refed)]: false,
[0]       [Symbol(asyncId)]: 48,
[0]       [Symbol(triggerId)]: 47
[0]     },
[0]     [Symbol(kBuffer)]: null,
[0]     [Symbol(kBufferCb)]: null,
[0]     [Symbol(kBufferGen)]: null,
[0]     [Symbol(kBytesRead)]: 0,
[0]     [Symbol(kBytesWritten)]: 0
[0]   },
[0]   _consuming: false,
[0]   _dumped: false,
[0]   next: [Function: next],
[0]   baseUrl: '/api/state',
[0]   originalUrl: '/api/state/all',
[0]   _parsedUrl: Url {
[0]     protocol: null,
[0]     slashes: null,
[0]     auth: null,
[0]     host: null,
[0]     port: null,
[0]     hostname: null,
[0]     hash: null,
[0]     search: null,
[0]     query: null,
[0]     pathname: '/all',
[0]     path: '/all',
[0]     href: '/all',
[0]     _raw: '/all'
[0]   },
[0]   params: {},
[0]   query: {},
[0]   res: ServerResponse {
[0]     _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
[0]     _eventsCount: 1,
[0]     _maxListeners: undefined,
[0]     outputData: [],
[0]     outputSize: 0,
[0]     writable: true,
[0]     _last: false,
[0]     chunkedEncoding: false,
[0]     shouldKeepAlive: false,
[0]     useChunkedEncodingByDefault: true,
[0]     sendDate: true,
[0]     _removedConnection: false,
[0]     _removedContLen: false,
[0]     _removedTE: false,
[0]     _contentLength: null,
[0]     _hasBody: true,
[0]     _trailer: '',
[0]     finished: false,
[0]     _headerSent: false,
[0]     socket: Socket {
[0]       connecting: false,
[0]       _hadError: false,
[0]       _parent: null,
[0]       _host: null,
[0]       _readableState: [ReadableState],
[0]       readable: true,
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 8,
[0]       _maxListeners: undefined,
[0]       _writableState: [WritableState],
[0]       writable: true,
[0]       allowHalfOpen: true,
[0]       _sockname: null,
[0]       _pendingData: null,
[0]       _pendingEncoding: '',
[0]       server: [Server],
[0]       _server: [Server],
[0]       timeout: 120000,
[0]       parser: [HTTPParser],
[0]       on: [Function: socketListenerWrap],
[0]       addListener: [Function: socketListenerWrap],
[0]       prependListener: [Function: socketListenerWrap],
[0]       _paused: false,
[0]       _httpMessage: [Circular],
[0]       [Symbol(asyncId)]: 47,
[0]       [Symbol(kHandle)]: [TCP],
[0]       [Symbol(lastWriteQueueSize)]: 0,
[0]       [Symbol(timeout)]: Timeout {
[0]         _idleTimeout: 120000,
[0]         _idlePrev: [TimersList],
[0]         _idleNext: [TimersList],
[0]         _idleStart: 3214,
[0]         _onTimeout: [Function: bound ],
[0]         _timerArgs: undefined,
[0]         _repeat: null,
[0]         _destroyed: false,
[0]         [Symbol(refed)]: false,
[0]         [Symbol(asyncId)]: 48,
[0]         [Symbol(triggerId)]: 47
[0]       },
[0]       [Symbol(kBuffer)]: null,
[0]       [Symbol(kBufferCb)]: null,
[0]       [Symbol(kBufferGen)]: null,
[0]       [Symbol(kBytesRead)]: 0,
[0]       [Symbol(kBytesWritten)]: 0
[0]     },
[0]     connection: Socket {
[0]       connecting: false,
[0]       _hadError: false,
[0]       _parent: null,
[0]       _host: null,
[0]       _readableState: [ReadableState],
[0]       readable: true,
[0]       _events: [Object: null prototype],
[0]       _eventsCount: 8,
[0]       _maxListeners: undefined,
[0]       _writableState: [WritableState],
[0]       writable: true,
[0]       allowHalfOpen: true,
[0]       _sockname: null,
[0]       _pendingData: null,
[0]       _pendingEncoding: '',
[0]       server: [Server],
[0]       _server: [Server],
[0]       timeout: 120000,
[0]       parser: [HTTPParser],
[0]       on: [Function: socketListenerWrap],
[0]       addListener: [Function: socketListenerWrap],
[0]       prependListener: [Function: socketListenerWrap],
[0]       _paused: false,
[0]       _httpMessage: [Circular],
[0]       [Symbol(asyncId)]: 47,
[0]       [Symbol(kHandle)]: [TCP],
[0]       [Symbol(lastWriteQueueSize)]: 0,
[0]       [Symbol(timeout)]: Timeout {
[0]         _idleTimeout: 120000,
[0]         _idlePrev: [TimersList],
[0]         _idleNext: [TimersList],
[0]         _idleStart: 3214,
[0]         _onTimeout: [Function: bound ],
[0]         _timerArgs: undefined,
[0]         _repeat: null,
[0]         _destroyed: false,
[0]         [Symbol(refed)]: false,
[0]         [Symbol(asyncId)]: 48,
[0]         [Symbol(triggerId)]: 47
[0]       },
[0]       [Symbol(kBuffer)]: null,
[0]       [Symbol(kBufferCb)]: null,
[0]       [Symbol(kBufferGen)]: null,
[0]       [Symbol(kBytesRead)]: 0,
[0]       [Symbol(kBytesWritten)]: 0
[0]     },
[0]     _header: null,
[0]     _onPendingData: [Function: bound updateOutgoingData],
[0]     _sent100: false,
[0]     _expect_continue: false,
[0]     req: [Circular],
[0]     locals: [Object: null prototype] {},
[0]     [Symbol(kNeedDrain)]: false,
[0]     [Symbol(isCorked)]: false,
[0]     [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] }
[0]   },
[0]   body: {},
[0]   route: Route {
[0]     path: '/all',
[0]     stack: [ [Layer], [Layer] ],
[0]     methods: { get: true }
[0]   }
[0] }
[0] --------------------------------